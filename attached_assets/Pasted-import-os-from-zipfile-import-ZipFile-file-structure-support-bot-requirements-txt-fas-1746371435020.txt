import os
from zipfile import ZipFile

file_structure = {
    "support-bot/requirements.txt": """fastapi
uvicorn
openai
jinja2
""",
    "support-bot/.replit": """run = "uvicorn main:app --host 0.0.0.0 --port 3000"
""",
    "support-bot/main.py": """from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
import openai
import os

openai.api_key = os.getenv("OPENAI_API_KEY")

app = FastAPI()
app.mount("/static", StaticFiles(directory="static"), name="static")
templates = Jinja2Templates(directory="templates")

SYSTEM_PROMPT = "You are a helpful, friendly customer support assistant."

@app.get("/", response_class=HTMLResponse)
async def home(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

@app.post("/chat")
async def chat(request: Request):
    data = await request.json()
    user_input = data.get("message")

    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": user_input}
        ]
    )

    answer = response.choices[0].message["content"].strip()
    return JSONResponse({"reply": answer})
""",
    "support-bot/templates/index.html": """<!DOCTYPE html>
<html>
<head>
    <title>Support Bot</title>
    <script src="/static/script.js" defer></script>
</head>
<body>
    <h2>Support Bot</h2>
    <div id="chat-box"></div>
    <input type="text" id="user-input" placeholder="Type your question..." />
    <button onclick="sendMessage()">Send</button>
</body>
</html>
""",
    "support-bot/static/script.js": """async function sendMessage() {
    const input = document.getElementById("user-input");
    const message = input.value;
    input.value = "";

    const chatBox = document.getElementById("chat-box");
    chatBox.innerHTML += `<p><strong>You:</strong> ${message}</p>`;

    const res = await fetch("/chat", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ message })
    });

    const data = await res.json();
    chatBox.innerHTML += `<p><strong>Bot:</strong> ${data.reply}</p>`;
}
"""
}

# Create ZIP file
with ZipFile("support-bot.zip", "w") as zipf:
    for filepath, content in file_structure.items():
        os.makedirs(os.path.dirname(filepath), exist_ok=True)
        with open(filepath, "w") as f:
            f.write(content)
        zipf.write(filepath)
